<ctl:package
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xmlns:ows='http://www.opengis.net/ows/2.0'
 xmlns:gml='http://www.opengis.net/gml/3.2'
 xmlns:wcs='http://www.opengis.net/wcs/2.0'
 xmlns:wcps='http://www.opengis.net/wcps/1.0/'
 xmlns:ctlp="http://www.occamlab.com/te/parsers"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:wcs2="http://www.opengis.net/wcs/2.0"
 xmlns:sch="http://purl.oclc.org/dsdl/schematron"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
>
  <ctl:test name="wcs2:wcps">
    <ctl:param name="url"/>
    <ctl:param name="Capabilities"/>
    <ctl:assertion>Test the WCS 2.0 wcps, the test will be completed after the extension become official and the mdd support is provided</ctl:assertion>
    <ctl:code>
		      <xsl:if test="contains(string-join(($Capabilities//*[local-name()='ServiceIdentification']/*[local-name()='Profile']),' '), 'http://www.opengis.net/spec/WCS_service-extension_wcps/1.0')">

          		<ctl:call-test name="wcs2:wcps-req1">
	    			<ctl:with-param name="url" select="$url"/>
	    			<ctl:with-param name="Capabilities" select="$Capabilities"/>
			</ctl:call-test>   				 		
							
		      </xsl:if>
      		

     </ctl:code>
   </ctl:test> 
    
  <ctl:test name="wcs2:wcps-req1">
    <ctl:param name="url"/>
    <ctl:assertion>Test the WCPS 1.0 req1</ctl:assertion>
    <ctl:code>
    	<xsl:variable name="ProcessCoverage">
				<ctl:request>
			       		<ctl:url>
						<xsl:value-of select="$url"/>
					</ctl:url>
					<ctl:method>post</ctl:method>
					<ctl:header name="Content-type">text/xml</ctl:header>
					<ctl:body><![CDATA[
					
<ProcessCoveragesRequest xmlns="http://www.opengis.net/wcps/1.0" service="WCPS" version="1.0.0">
    <query>
        <abstractSyntax>
             for m1 in ( ]]><xsl:value-of select="$Capabilities//*[local-name()='CoverageSummary'][1]/*[local-name()='CoverageId']"/><![CDATA[  ) return encode( m1, "jpeg" ))
        </abstractSyntax>
    </query>
</ProcessCoveragesRequest>
                                                      ]]></ctl:body>
	<parsers:ImageParser>
		<parsers:type/>
		<parsers:height/>
		<parsers:width/>
	</parsers:ImageParser>
	
        			</ctl:request>
      	</xsl:variable>
      			<xsl:choose>
  				<xsl:when test="string-length($ProcessCoverage)=0">
					<ctl:message>[FAILURE] Parsing or validation errors.</ctl:message>
					<ctl:fail/>
  				</xsl:when>
  				<xsl:otherwise>
  				        <ctl:message><xsl:value-of select="$ProcessCoverage/*"/></ctl:message>
        				<xsl:if test="not($ProcessCoverage//*[local-name()='ImageParser']//*[local-name()='type']='jpeg')">
        			   		<ctl:message>[FAILURE] The result should response a correct covreage</ctl:message>
        			   		<ctl:fail/>
        				</xsl:if>
  				</xsl:otherwise>
      			</xsl:choose>  
      			
   		</ctl:code>
  	</ctl:test>


</ctl:package>